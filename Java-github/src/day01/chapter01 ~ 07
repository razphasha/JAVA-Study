ㅁ chapter01. Let's Start JAVA!
	1. 자바 프로그램의 실행구조와 자바 가상머신
 		- 하드웨어를 기반으로 운영체제가 동작한다.
 		- 운영체제는 자바 가상머신을 실행 시킨다.
 		- 자바 가상머신은 자바 프로그램을 실행시킨다.

	2. 자바 바이트 코드 : 자바 컴파일러에 의해서 생성되는 코드를 가리켜 '자바 바이트코드'라고 한다.

ㅁ chapter02. 변수와 자료형
	1. 자료형의 종류와구분
		- boolean : 1byte
		- char : 2byte
		- byte : 1byte
		- short : 2byte
		- int : 4byte
		- long : 8byte
		- float : 4byte
		- double : 8byte
	
	* CPU는 int형 정수연산을 가장 고속으로 처리하게끔 설계되어 있다. 자바는 정수형 연산을 진행할 때, 모든 피연산자를 int형으로 변환하는 과정을 거친다.
	* JAVA는 유니코드라는 표준을 근거로 문자를 표현하고 있다. 따라서 자바에서 문자 하나를 변수에 저장하면 실제로는 해당 문자의 유니코드 값이 저장된다.

ㅁ chapter03. 상수와 형 변환
	1. 상수(=리터럴)의 특징
		- 이름이 없다.
		- 이름이 없으므로 메모리에 저장된 상수의 값을 변경시킬 수 없다.
	
	* 기본적으로 모든 정수형 상수는 int형으로 표현 및 저장한다.
	* 기본적으로 모든 실수형 상수는 double형으로 표현 및 저장한다.
	
	2. 자동 형 변환 규칙
		- byte > short, char > int > long > float > double
		- ex) doulbe num1 = 20;
	
	3. 명시적 형 변환
		- ex) int num = (int) 3.15;
		
ㅁ chapter04. 연산자
	1. Short-Circuit Evaluation(SCE)
		- ex) (num1 += 10) < 0 && (num2 += 10) > 0   --------->  num1 = 10, num2 = 0
		- 연산속도 향상을 위해서 && 왼쪽 계산식이 false 이므로, 오른쪽 계산식은 계산 하지 않고 넘어감.
		
ㅁ chapter05.실행흐름의 컨트롤
	1. 조건 연산자
		- (num1>num2) ? num1 : num2   ----------> ()안 조건이 참이면 num1실행, 틀리면 num2 실행
	
	2. 레이블을 설정하는 break문
		- ex)	outerLoop :
				for(int i=1; i<10; i++)
				{
					for(int j=1; j<10; j++)
					{
						if(i%2==0 && j%2==0)
							break outerLoop;
					}
				}
		- 중첩된 반복문을 벗어나고 싶은 경우 break문을 구성할 때 빠져나갈 위치를 명시해 주면 된다.
		
ㅁ chapter06. 메소드와 변수의 스코프
	
ㅁ chapter07. 클래스와 인스턴스
	1. 객체를 이루는 것은 데이터와 기능
		- 상태 정보는 변수를 통해서 표현
		- 행동은 메소드를 통해서 표현
		
	2. final 키워드
		- 지역변수가 final로 선언되면, 딱 한번 값의 초기화가 가능하다.
	
	3. 객체간의 대화방법(Message Passing)
		- 하나의 객체가 다른 하나의 객체에게 메시지를 전달하는 방법은 메소드 호출을 기반으로 한다. 객체지향에서는 이러한 형태의 메소드 호출을
		'메시지 전달'이라 한다.
	
	4. 객체와 인스턴스
		- 인스턴스 : 클래스라는 틀을 기반으로 실제화 된 대상
		- 객체 : 현실 세계의 사물이나 대상을 프로그램상에서 표현되었음을 강조할 때
	
	5. 생성자
		- 자바의 인스턴스 생성시에는 반드시 생성자가 호출되어야 한다.
		
	6. 디폴트 생성자
		- 프로그래머가 생성자를 삽입하지 않으면 자바 컴파일러가 생성자를 대신 삽입해 주는데, 이렇게 삽입되는 생성자를 가리켜 '디폴트 생성자'라 한다.
		
	7. 자바의 이름 규칙
		- 클래스의 이름 규칙 : 첫 문자는 대문자로 시작한다. / 둘 이상의 단어가 묶여서 하나의 이름을 구성할 때, 새로 시작하는 단어는 대문자로 한다.
		- 메소드와 변수의 이름 규칙 : 첫 문자는 소문자로 시작한다.
		- 상수의 이름 규칙 : 모든 문자를 대문자로 구성하는 것이 관례이다. / 단 둘 이상의 단어가 연결이 되어야 하는 경우에는 다음과 같이 _(언더바)를 사용한다.
				 